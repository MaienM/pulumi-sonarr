// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetMetadataArgs, GetMetadataResult, GetMetadataOutputArgs } from "./getMetadata";
export const getMetadata: typeof import("./getMetadata").getMetadata = null as any;
export const getMetadataOutput: typeof import("./getMetadata").getMetadataOutput = null as any;
utilities.lazyLoad(exports, ["getMetadata","getMetadataOutput"], () => require("./getMetadata"));

export { GetMetadataConsumersResult } from "./getMetadataConsumers";
export const getMetadataConsumers: typeof import("./getMetadataConsumers").getMetadataConsumers = null as any;
utilities.lazyLoad(exports, ["getMetadataConsumers"], () => require("./getMetadataConsumers"));

export { MetadataArgs, MetadataState } from "./metadata";
export type Metadata = import("./metadata").Metadata;
export const Metadata: typeof import("./metadata").Metadata = null as any;
utilities.lazyLoad(exports, ["Metadata"], () => require("./metadata"));

export { MetadataKodiArgs, MetadataKodiState } from "./metadataKodi";
export type MetadataKodi = import("./metadataKodi").MetadataKodi;
export const MetadataKodi: typeof import("./metadataKodi").MetadataKodi = null as any;
utilities.lazyLoad(exports, ["MetadataKodi"], () => require("./metadataKodi"));

export { MetadataRoksboxArgs, MetadataRoksboxState } from "./metadataRoksbox";
export type MetadataRoksbox = import("./metadataRoksbox").MetadataRoksbox;
export const MetadataRoksbox: typeof import("./metadataRoksbox").MetadataRoksbox = null as any;
utilities.lazyLoad(exports, ["MetadataRoksbox"], () => require("./metadataRoksbox"));

export { MetadataWdtvArgs, MetadataWdtvState } from "./metadataWdtv";
export type MetadataWdtv = import("./metadataWdtv").MetadataWdtv;
export const MetadataWdtv: typeof import("./metadataWdtv").MetadataWdtv = null as any;
utilities.lazyLoad(exports, ["MetadataWdtv"], () => require("./metadataWdtv"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sonarr:Metadata/metadata:Metadata":
                return new Metadata(name, <any>undefined, { urn })
            case "sonarr:Metadata/metadataKodi:MetadataKodi":
                return new MetadataKodi(name, <any>undefined, { urn })
            case "sonarr:Metadata/metadataRoksbox:MetadataRoksbox":
                return new MetadataRoksbox(name, <any>undefined, { urn })
            case "sonarr:Metadata/metadataWdtv:MetadataWdtv":
                return new MetadataWdtv(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sonarr", "Metadata/metadata", _module)
pulumi.runtime.registerResourceModule("sonarr", "Metadata/metadataKodi", _module)
pulumi.runtime.registerResourceModule("sonarr", "Metadata/metadataRoksbox", _module)
pulumi.runtime.registerResourceModule("sonarr", "Metadata/metadataWdtv", _module)
