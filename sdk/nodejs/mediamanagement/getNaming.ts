// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Media Management -->Naming.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sonarr from "@pulumi/sonarr";
 *
 * const example = sonarr.MediaManagement.getNaming({});
 * ```
 */
export function getNaming(opts?: pulumi.InvokeOptions): Promise<GetNamingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sonarr:MediaManagement/getNaming:getNaming", {
    }, opts);
}

/**
 * A collection of values returned by getNaming.
 */
export interface GetNamingResult {
    /**
     * Anime episode format.
     */
    readonly animeEpisodeFormat: string;
    /**
     * Colon replacement format. 0 - 'Delete' 1 - 'Replace with Dash' 2 - 'Replace with Space Dash' 3 - 'Replace with Space Dash Space' 4 - 'Smart Replace'.
     */
    readonly colonReplacementFormat: number;
    /**
     * Daily episode format.
     */
    readonly dailyEpisodeFormat: string;
    /**
     * Delay Profile ID.
     */
    readonly id: number;
    /**
     * Multi episode style. 0 - 'Extend' 1 - 'Duplicate' 2 - 'Repeat' 3 - 'Scene' 4 - 'Range' 5 - 'Prefixed Range'.
     */
    readonly multiEpisodeStyle: number;
    /**
     * Sonarr will use the existing file name if false.
     */
    readonly renameEpisodes: boolean;
    /**
     * Replace illegal characters. They will be removed if false.
     */
    readonly replaceIllegalCharacters: boolean;
    /**
     * Season folder format.
     */
    readonly seasonFolderFormat: string;
    /**
     * Series folder format.
     */
    readonly seriesFolderFormat: string;
    /**
     * Special folder format.
     */
    readonly specialsFolderFormat: string;
    /**
     * Standard episode formatss.
     */
    readonly standardEpisodeFormat: string;
}
