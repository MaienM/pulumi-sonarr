// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Indexers -->Indexer Config resource.
 * For more information refer to [Indexer](https://wiki.servarr.com/sonarr/settings#options) documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sonarr from "@maienm/pulumi-sonarr";
 *
 * const example = new sonarr.indexers.IndexerConfig("example", {
 *     maximumSize: 0,
 *     minimumAge: 0,
 *     retention: 0,
 *     rssSyncInterval: 25,
 * });
 * ```
 *
 * ## Import
 *
 * import does not need parameters
 *
 * ```sh
 *  $ pulumi import sonarr:Indexers/indexerConfig:IndexerConfig example
 * ```
 */
export class IndexerConfig extends pulumi.CustomResource {
    /**
     * Get an existing IndexerConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IndexerConfigState, opts?: pulumi.CustomResourceOptions): IndexerConfig {
        return new IndexerConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sonarr:Indexers/indexerConfig:IndexerConfig';

    /**
     * Returns true if the given object is an instance of IndexerConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IndexerConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IndexerConfig.__pulumiType;
    }

    /**
     * Maximum size.
     */
    public readonly maximumSize!: pulumi.Output<number>;
    /**
     * Minimum age.
     */
    public readonly minimumAge!: pulumi.Output<number>;
    /**
     * Retention.
     */
    public readonly retention!: pulumi.Output<number>;
    /**
     * RSS sync interval.
     */
    public readonly rssSyncInterval!: pulumi.Output<number>;

    /**
     * Create a IndexerConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IndexerConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IndexerConfigArgs | IndexerConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IndexerConfigState | undefined;
            resourceInputs["maximumSize"] = state ? state.maximumSize : undefined;
            resourceInputs["minimumAge"] = state ? state.minimumAge : undefined;
            resourceInputs["retention"] = state ? state.retention : undefined;
            resourceInputs["rssSyncInterval"] = state ? state.rssSyncInterval : undefined;
        } else {
            const args = argsOrState as IndexerConfigArgs | undefined;
            if ((!args || args.maximumSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maximumSize'");
            }
            if ((!args || args.minimumAge === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minimumAge'");
            }
            if ((!args || args.retention === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retention'");
            }
            if ((!args || args.rssSyncInterval === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rssSyncInterval'");
            }
            resourceInputs["maximumSize"] = args ? args.maximumSize : undefined;
            resourceInputs["minimumAge"] = args ? args.minimumAge : undefined;
            resourceInputs["retention"] = args ? args.retention : undefined;
            resourceInputs["rssSyncInterval"] = args ? args.rssSyncInterval : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IndexerConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IndexerConfig resources.
 */
export interface IndexerConfigState {
    /**
     * Maximum size.
     */
    maximumSize?: pulumi.Input<number>;
    /**
     * Minimum age.
     */
    minimumAge?: pulumi.Input<number>;
    /**
     * Retention.
     */
    retention?: pulumi.Input<number>;
    /**
     * RSS sync interval.
     */
    rssSyncInterval?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a IndexerConfig resource.
 */
export interface IndexerConfigArgs {
    /**
     * Maximum size.
     */
    maximumSize: pulumi.Input<number>;
    /**
     * Minimum age.
     */
    minimumAge: pulumi.Input<number>;
    /**
     * Retention.
     */
    retention: pulumi.Input<number>;
    /**
     * RSS sync interval.
     */
    rssSyncInterval: pulumi.Input<number>;
}
